@model LoginViewModel

@* <div class="login-page">
    <div class="lead">
        <h1>Login</h1>
        <p>Choose how to login</p>
    </div>

    <partial name="_ValidationSummary" />

    <div class="row">

        @if (Model.EnableLocalLogin)
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2>Local Account</h2>
                    </div>

                    <div class="card-body">
                        <form asp-route="Login">
                            <input type="hidden" asp-for="ReturnUrl" />

                            <div class="form-group">
                                <label asp-for="Username"></label>
                                <input class="form-control" placeholder="Username" asp-for="Username" autofocus>
                            </div>
                            <div class="form-group">
                                <label asp-for="Password"></label>
                                <input type="password" class="form-control" placeholder="Password" asp-for="Password" autocomplete="off">
                            </div>
                            @if (Model.AllowRememberLogin)
                            {
                                <div class="form-group">
                                    <div class="form-check">
                                        <input class="form-check-input" asp-for="RememberLogin">
                                        <label class="form-check-label" asp-for="RememberLogin">
                                            Remember My Login
                                        </label>
                                    </div>
                                </div>
                            }
                            <button class="btn btn-primary" name="button" value="login">Login</button>
                            <button class="btn btn-secondary" name="button" value="cancel">Cancel</button>
                        </form>
                    </div>
                
                    <div class="card-footer">
                        <a href="@Url.Action("Register", new {Model.ReturnUrl}))">Sign up</a>

                    </div>

                </div>
            </div>
        }

        @if (Model.VisibleExternalProviders.Any())
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2>External Account</h2>
                    </div>
                    <div class="card-body">
                        <ul class="list-inline">
                            @foreach (var provider in Model.VisibleExternalProviders)
                            {
                                <li class="list-inline-item">
                                    <a class="btn btn-secondary"
                                       asp-controller="External"
                                       asp-action="Challenge"
                                       asp-route-scheme="@provider.AuthenticationScheme"
                                       asp-route-returnUrl="@Model.ReturnUrl">
                                        @provider.DisplayName
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }

        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>Invalid login request</strong>
                There are no login schemes configured for this request.
            </div>
        }
    </div>
</div> *@


<div class="col-lg-6">
    <partial name="_ValidationSummary" />
    @if (Model.EnableLocalLogin)
    {
        <div class="bodyWrap_bg signupFormWrap">
        <h2>Create Your Account</h2>
        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy</p>

        <form asp-route="Login">
            <input type="hidden" asp-for="ReturnUrl" />

            <div class="form-group">
                <label asp-for="Username"></label>
                <input class="form-control" placeholder="Username" asp-for="Username" autofocus>
            </div>
            <div class="form-group">
                <label asp-for="Password"></label>
                <input type="password" class="form-control" placeholder="Password" asp-for="Password" autocomplete="off">
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="Password" class="form-label">Password</label>
                        <input class="form-control" type="text" asp-for="Password" placeholder="Password" autocomplete="off">
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="" class="form-label">Confirm Password</label>
                        <input class="form-control" name="" type="password" value="" placeholder="">
                    </div>
                </div>
            </div>

            <div class="formSubmit_btns margin_top10px">
                <button @* type="submit" *@ class="btn btn-sucess">Login</button>

            </div>
        </form>

        <div class="signup_bottom_infoLine">
            <span>
                Already registered?<a href="@Url.Action("Register", new {Model.ReturnUrl}))">Sign up</a>
            </span>
        </div>

    </div>
    }

    @if (Model.VisibleExternalProviders.Any())
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2>External Account</h2>
                    </div>
                    <div class="card-body">
                        <ul class="list-inline">
                            @foreach (var provider in Model.VisibleExternalProviders)
                            {
                                <li class="list-inline-item">
                                    <a class="btn btn-secondary"
                                       asp-controller="External"
                                       asp-action="Challenge"
                                       asp-route-scheme="@provider.AuthenticationScheme"
                                       asp-route-returnUrl="@Model.ReturnUrl">
                                        @provider.DisplayName
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }

        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>Invalid login request</strong>
                There are no login schemes configured for this request.
            </div>
        }
</div>

